version: '3.9'

#networks:
#  back-tier:

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  onlinemed-service:
    container_name: onlinemed-service-docker
    image: 'onlinemed-service-docker:latest'
    build:
      context: ./onlinemed-backend
      dockerfile: ./Dockerfile
    depends_on:
      - onlinemed-postgresDB
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://onlinemed-postgresDB:5432/onlinemed_db
      - SPRING_DATASOURCE_USERNAME=onlinemed_root
      - SPRING_DATASOURCE_PASSWORD=e976908e-fab7-11ea-9418-5f9b5705bac5
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
      - SPRING_PROFILES_ACTIVE=dev
    ports:
      - "8080:8080"
    restart: always
    deploy:
        mode: global
        restart_policy:
          delay: 2s
          max_attempts: 5
          window: 20s

  onlinemed-postgresDB:
    image: 'postgres:latest'
    container_name: onlinemed-postgresDB
    environment:
      - POSTGRES_USER=onlinemed_root
      - POSTGRES_PASSWORD=e976908e-fab7-11ea-9418-5f9b5705bac5
      - POSTGRES_DB=onlinemed_db
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5555:5432"  # [outside:inside]protect locally installed postgres port
#    expose:
#      - "5555" # protect locally installed postgres port


  onlinemed-ui-service:
    container_name: onlinemed-ui-docker
    image: 'onlinemed-ui-docker:latest'
    build:
      context: ./onlinemed-ui
      dockerfile: ./Dockerfile
    depends_on:
      - onlinemed-service
    ports:
      - "4300:80"
    deploy:
      mode: global
      restart_policy:
        delay: 2s
        max_attempts: 5
        window: 20s

# Tracing/analytic  services ---------------------------------------------------------------------------
  prometheus:
    image: prom/prometheus:v2.45.2
    container_name: prometheus
    volumes:
      - ./:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    links:
      - onlinemed-service:onlinemed-service
    depends_on:
      - onlinemed-service
    restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    user: "0"
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/dashboards
    env_file:
      - ./grafana/config.monitoring
    restart: always
